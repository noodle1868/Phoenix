<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<!-- 이 XML 을 어떤 interface 를 통해서 연결 할 건가? -->
<mapper namespace="com.silver.item.ThingDAO">
	
	<!-- 비품 리스트 -->
	<select id="getThingList" resultType="thing">
		SELECT th_idx, th_name, th_part, th_date, th_state from thing ORDER BY th_idx DESC limit 10 offset 0;
	</select>
	
	<!-- 비품 리스트 필터 검색 -->
	<select id="getThingListSearch" resultType="thing" parameterType="HashMap">
		SELECT th_idx, th_name, th_part, th_date, th_state FROM thing
			WHERE
				th_name LIKE CONCAT('%',#{thName},'%')
				AND th_part LIKE CONCAT('%',#{thPart},'%')
				AND th_write LIKE CONCAT('%',#{thWrite},'%')
				AND th_state LIKE CONCAT(#{thState},'%')
				AND th_spon LIKE CONCAT('%',#{thSpon},'%')
			ORDER BY th_idx DESC limit 10 offset 0;
	</select>
	
	<select id="getThingDetail" resultType="thing" parameterType="String">
		SELECT * from thing WHERE th_idx = #{thIdx}
	</select>
	
	<select id="photoView" resultType="thing" parameterType="String">
		SELECT fp_idx, fp_oriFileName, fp_newFileName, fp_date, fpc_idx FROM filephoto WHERE th_idx=#{thIdx}
	</select>
	
	<insert id="thingWrite" 
	useGeneratedKeys="true"
	keyColumn="th_idx"
	keyProperty="th_idx"
	parameterType="thing">
		<choose>
			<when test="th_part.equals('후원')">
				INSERT into thing(it_idx, th_name, th_part, th_date, th_model, th_money, th_write, th_spon)
					VALUES(#{it_idx}, #{th_name}, #{th_part}, #{th_date}, #{th_model}, #{th_money}, '등록자_세션', #{th_spon})
			</when>
			<otherwise>
				INSERT into thing(it_idx, th_name, th_part, th_date, th_model, th_money, th_write)
					VALUES(#{it_idx}, #{th_name}, #{th_part}, #{th_date}, #{th_model}, #{th_money}, '등록자_세션')
			</otherwise>
		</choose>
	</insert>
	
	<insert id="photoInsert">
		INSERT INTO filephoto(fp_oriFileName, fp_newFileName, th_idx, fpc_idx)
			VALUES(#{param1}, #{param2}, #{param3}, 6);
	</insert>
	
	<select id="itemCateList" resultType="hashmap">
		SELECT i.it_idx, i.it_name, count(t.it_idx) AS cnt
			from item i left outer join thing t on  i.it_idx = t.it_idx
			WHERE NOT i.it_idx=1
		GROUP BY i.it_idx ORDER BY count(t.it_idx) desc;
	</select>
	
	<select id="thingCheck" parameterType="String" resultType="String">
		SELECT th_name FROM thing WHERE th_name = #{thName};
	</select>
	
</mapper>
